provider "aws" {
 region = "{{ region }}"
}

resource "aws_instance" "web_server" {
 ami = "{{ ami }}"
 instance_type = "{{ instance_type }}"
 subnet_id = aws_subnet.subnet1.id
 availability_zone = "{{ availability_zone }}"

 tags = {
   Name = "alonaru-web_server"
 }
}

resource "aws_lb" "application_lb" {
 name = "{{ load_balancer_name }}"
 internal = false
 load_balancer_type = "application"
 security_groups = [aws_security_group.lb_sg.id]
 subnets = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
}

resource "aws_security_group" "lb_sg" {
 name        = "alonaru-lb_security_group"
 description = "Allow HTTP inbound traffic"
 vpc_id   = aws_vpc.main_vpc.id
 
 ingress {
   from_port   = 80
   to_port     = 80
   protocol    = "tcp"
   cidr_blocks = ["0.0.0.0/0"]
 }

 egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
 }
}

resource "aws_lb_listener" "http_listener" {
 load_balancer_arn = aws_lb.application_lb.arn
 port              = 80
 protocol          = "HTTP"

 default_action {
   type             = "forward"
   target_group_arn = aws_lb_target_group.web_target_group.arn
 }
}

resource "aws_lb_target_group" "web_target_group" {
 name     = "alonaru-web-target-group"
 port     = 80
 protocol = "HTTP"
 vpc_id   = aws_vpc.main_vpc.id
}

resource "aws_lb_target_group_attachment" "web_instance_attachment" {
 target_group_arn = aws_lb_target_group.web_target_group.arn
 target_id        = aws_instance.web_server.id
}

resource "aws_vpc" "main_vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "subnet1" {
  vpc_id            = aws_vpc.main_vpc.id
  cidr_block        = "10.0.1.0/24"
  availability_zone = "{{ az1 }}"
}

resource "aws_subnet" "subnet2" {
  vpc_id            = aws_vpc.main_vpc.id
  cidr_block        = "10.0.2.0/24"
  availability_zone = "{{ az2 }}"
}

output "instance_id" {
  value = aws_instance.web_server.id
}

output "alb_dns_name" {
  value = aws_lb.application_lb.dns_name
}